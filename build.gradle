buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:1.0.1'
    classpath 'org.robolectric:robolectric-gradle-plugin:0.14.0'
  }
}

def getApplicationId = { "com.stanfy.enroscar.${it.name.replaceAll(/\W/, '').replaceAll(/enroscar/, '')}" }
def projectVersion = "2.0.alpha4-SNAPSHOT"

def checkstyleDir = new File(rootDir, 'config/checkstyle')
def checkstyleConfig = new File(checkstyleDir, 'checkstyle.xml')

def libraryModules = [
    'beans', 'content', 'assist', 'images', 'io', 'net', 'stats', 'ui', 'async-rx', 'async',
    'stats-flurry' //'sherlock-integration'
].collect { project(":$it") }

ext {
  androidBuildToolsVersion = '21.1.0'
}

configure(libraryModules) {

  version = projectVersion
  group = 'com.stanfy.enroscar'

  apply plugin: 'android-library'
  apply from: file("$rootDir/gradle/tests.gradle")
  apply from: file("$rootDir/gradle/publish.gradle")
  //apply plugin: 'checkstyle'

//  checkstyle {
//    configFile = checkstyleConfig
//    configProperties['basedir'] = project.projectDir
//  }

  repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
  }

  android {
    compileSdkVersion 19

    buildToolsVersion project.androidBuildToolsVersion

    defaultConfig {
      minSdkVersion 8

      testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
      testApplicationId "${getApplicationId(project)}.test"
    }

    compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_7
      targetCompatibility JavaVersion.VERSION_1_7
    }

  }

  def testDeps = [
      'com.squareup:fest-android:1.0.8@aar',
      'org.easytesting:fest-assert-core:2.0M10',
      'com.google.mockwebserver:mockwebserver:20130706',
      'org.easytesting:fest-reflect:1.4.1',
      'org.mockito:mockito-all:1.9.5'
  ]

  dependencies {
    testDeps.each {
      testCompile it
      androidTestCompile it
    }

    androidTestCompile('com.jakewharton.espresso:espresso:1.1-r3') {
      exclude group: 'org.hamcrest'
    }

    testCompile group: 'org.robolectric', name: 'robolectric', version: '2.3'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.easytesting:fest-util:1.2.5'
  }

  project.ext.dependOnProjects = { list ->
    project.dependencies {
      list.each {
        compile project(it)
        testCompile project(path : it, configuration : 'testCompile')
      }
    }
  }

  android {
    if (project.hasProperty('preDex')) {
      dexOptions {
        preDexLibraries = Boolean.valueOf("$project.preDex")
      }
    }
  }

}
